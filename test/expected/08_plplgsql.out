----
-- Regression test to Global Temporary Table implementation
--
-- Test for GTT defined inside a PLPGSQL function.
--
----
-- Import the library
LOAD 'pgtt';
CREATE OR REPLACE FUNCTION test_temp_table ()
RETURNS boolean
AS $$
BEGIN

     CREATE /*GLOBAL*/ TEMPORARY TABLE t_glob_temptable1(id int, lbl text) ON COMMIT PRESERVE ROWS;
     INSERT INTO t_glob_temptable1 (id, lbl) SELECT i, md5(i::text) FROM generate_series(1, 10) i;
     PERFORM * FROM t_glob_temptable1 ;
     RETURN true;
END;
$$
LANGUAGE plpgsql SECURITY DEFINER;
-- Look at Global Temporary Table definition: none
SELECT nspname, relname, preserved, code FROM pgtt_schema.pg_global_temp_tables;
 nspname | relname | preserved | code 
---------+---------+-----------+------
(0 rows)

-- Call the function
SELECT test_temp_table();
 test_temp_table 
-----------------
 t
(1 row)

-- Look at Global Temporary Table definition: tablae exists
SELECT nspname, relname, preserved, code FROM pgtt_schema.pg_global_temp_tables;
   nspname   |      relname      | preserved |       code       
-------------+-------------------+-----------+------------------
 pgtt_schema | t_glob_temptable1 | t         | id int, lbl text
(1 row)

-- A "template" unlogged table should exists
SET pgtt.enabled TO off;
\d pgtt_schema.t_glob_temptable1;
  Unlogged table "pgtt_schema.t_glob_temptable1"
 Column |  Type   | Collation | Nullable | Default 
--------+---------+-----------+----------+---------
 id     | integer |           |          | 
 lbl    | text    |           |          | 

-- Get rows from the template table
SELECT * FROM pgtt_schema.t_glob_temptable1;
 id | lbl 
----+-----
(0 rows)

SET pgtt.enabled TO on;
-- Get rows from the temporary table
SELECT * FROM t_glob_temptable1;
 id |               lbl                
----+----------------------------------
  1 | c4ca4238a0b923820dcc509a6f75849b
  2 | c81e728d9d4c2f636f067f89cc14862c
  3 | eccbc87e4b5ce2fe28308fd9f2a7baf3
  4 | a87ff679a2f3e71d9181a67b7542122c
  5 | e4da3b7fbbce2345d7772b0674a318d5
  6 | 1679091c5a880faf6fb5e6087eb1b2dc
  7 | 8f14e45fceea167a5a36dedd4bea2543
  8 | c9f0f895fb98ab9159f51fd0297e236d
  9 | 45c48cce2e2d7fbdea1afc51c7c6ad26
 10 | d3d9446802a44259755d38e6d163e820
(10 rows)

-- Verify that both tables have been dropped
SET pgtt.enabled TO off;
-- The "template" unlogged table should not exists anymore as weel as the temporary table
SELECT n.nspname, c.relname FROM pg_class c JOIN pg_namespace n ON (c.relnamespace=n.oid) WHERE relname = 't_glob_temptable1';
   nspname   |      relname      
-------------+-------------------
 pgtt_schema | t_glob_temptable1
 pg_temp_3   | t_glob_temptable1
(2 rows)

-- Look at Global Temporary Table definition
SELECT nspname, relname, preserved, code FROM pgtt_schema.pg_global_temp_tables; -- should be empty
   nspname   |      relname      | preserved |       code       
-------------+-------------------+-----------+------------------
 pgtt_schema | t_glob_temptable1 | t         | id int, lbl text
(1 row)

SET pgtt.enabled TO on;
-- Call the function a second time
SELECT test_temp_table();
ERROR:  relation "t_glob_temptable1" already exists
CONTEXT:  SQL statement "CREATE UNLOGGED TABLE pgtt_schema.t_glob_temptable1 (id int, lbl text)"
SQL statement "CREATE /*GLOBAL*/ TEMPORARY TABLE t_glob_temptable1(id int, lbl text) ON COMMIT PRESERVE ROWS"
PL/pgSQL function test_temp_table() line 4 at SQL statement
-- Look at temporary table content
SELECT * FROM t_glob_temptable1;
 id |               lbl                
----+----------------------------------
  1 | c4ca4238a0b923820dcc509a6f75849b
  2 | c81e728d9d4c2f636f067f89cc14862c
  3 | eccbc87e4b5ce2fe28308fd9f2a7baf3
  4 | a87ff679a2f3e71d9181a67b7542122c
  5 | e4da3b7fbbce2345d7772b0674a318d5
  6 | 1679091c5a880faf6fb5e6087eb1b2dc
  7 | 8f14e45fceea167a5a36dedd4bea2543
  8 | c9f0f895fb98ab9159f51fd0297e236d
  9 | 45c48cce2e2d7fbdea1afc51c7c6ad26
 10 | d3d9446802a44259755d38e6d163e820
(10 rows)

-- Reconnect and drop it
\c - -
LOAD 'pgtt';
-- Cleanup
DROP TABLE t_glob_temptable1;
DROP FUNCTION test_temp_table();
