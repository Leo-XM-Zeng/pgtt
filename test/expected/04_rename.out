----
-- Regression test to Global Temporary Table implementation
--
-- Test on renaming GTT using ALTER TABLE ... RENAME TO ...
--
-- Renaming a GGT when the temporary table has already been
-- created is not allowed and must be done in a new session.
--
----
-- Import the library
LOAD 'pgtt';
-- Create a GTT like table
CREATE /*GLOBAL*/ TEMPORARY TABLE t_glob_temptable1 (id integer, lbl text) ON COMMIT PRESERVE ROWS;
CREATE INDEX ON pgtt_schema.t_glob_temptable1 (id);
CREATE INDEX ON pgtt_schema.t_glob_temptable1 (lbl);
-- Look at Global Temporary Table definition
SELECT nspname, relname, preserved, code FROM pgtt_schema.pg_global_temp_tables;
   nspname   |      relname      | preserved |         code         
-------------+-------------------+-----------+----------------------
 pgtt_schema | t_glob_temptable1 | t         | id integer, lbl text
(1 row)

-- A "template" unlogged table should exists
\d pgtt_schema.t_glob_temptable1;
  Unlogged table "pgtt_schema.t_glob_temptable1"
 Column |  Type   | Collation | Nullable | Default 
--------+---------+-----------+----------+---------
 id     | integer |           |          | 
 lbl    | text    |           |          | 
Indexes:
    "t_glob_temptable1_id_idx" btree (id)
    "t_glob_temptable1_lbl_idx" btree (lbl)

-- Rename the table
ALTER TABLE t_glob_temptable1 RENAME TO t_glob_temptable2;
-- Look at Global Temporary Table definition
SELECT nspname, relname, preserved, code FROM pgtt_schema.pg_global_temp_tables;
   nspname   |      relname      | preserved |         code         
-------------+-------------------+-----------+----------------------
 pgtt_schema | t_glob_temptable2 | t         | id integer, lbl text
(1 row)

-- A "template" unlogged table should exists
SET pgtt.enabled TO off;
\d pgtt_schema.t_glob_temptable2;
  Unlogged table "pgtt_schema.t_glob_temptable2"
 Column |  Type   | Collation | Nullable | Default 
--------+---------+-----------+----------+---------
 id     | integer |           |          | 
 lbl    | text    |           |          | 
Indexes:
    "t_glob_temptable1_id_idx" btree (id)
    "t_glob_temptable1_lbl_idx" btree (lbl)

SET pgtt.enabled TO on;
-- With the first insert some value in the temporary table
INSERT INTO t_glob_temptable2 VALUES (1, 'One');
-- Look if we have two tables now
SELECT regexp_replace(n.nspname, '\d+', 'x', 'g'), c.relname FROM pg_class c JOIN pg_namespace n ON (c.relnamespace=n.oid) WHERE relname = 't_glob_temptable2';
 regexp_replace |      relname      
----------------+-------------------
 pgtt_schema    | t_glob_temptable2
 pg_temp_x      | t_glob_temptable2
(2 rows)

-- The table doesn't exist anymore
SET pgtt.enabled TO off;
\d t_glob_temptable1;
SET pgtt.enabled TO on;
INSERT INTO t_glob_temptable2 VALUES (2, 'two');
SELECT * FROM t_glob_temptable2 WHERE id = 2;
 id | lbl 
----+-----
  2 | two
(1 row)

-- Rename the table when the temporary table has already been created is not allowed
ALTER TABLE t_glob_temptable2 RENAME TO t_glob_temptable1;
ERROR:  a temporary table has been created and is active, can not rename the GTT table in this session.
\c - -
LOAD 'pgtt';
ALTER TABLE t_glob_temptable2 RENAME TO t_glob_temptable1;
-- Look if the renaming is effective
SELECT n.nspname, c.relname FROM pg_class c JOIN pg_namespace n ON (c.relnamespace=n.oid) WHERE relname = 't_glob_temptable1';
   nspname   |      relname      
-------------+-------------------
 pgtt_schema | t_glob_temptable1
(1 row)

-- Reconnect and drop it
\c - -
LOAD 'pgtt';
-- Cleanup
DROP TABLE t_glob_temptable1;
